---
title: "HW2: OLS and Linear Algebra"
author: "Kaori hirano"
date: "6 14 2023"
format: pdf
---

# Packages

```{r load-packages}
# load packages here
library(plyr)
library(tidyverse)
install.packages('lmSupport')
library(lmSupport)
```

# Data

```{r import-data}
# import data here
dcbikeshare <- read.csv('data/bikeshare-day.csv')
```


# Data Wrangling

## Q1 
Recode the season variable to be a factor with meaningful level names as outlined in the
codebook (at the link above), with “spring” as the baseline level.

```{r q1}
# code here
d <- dcbikeshare
as.factor(d$season)
(d$season <- mapvalues(d$season, from = c('1','2','3', '4'), to = c("Winter", "Spring", "Summer", "Fall"))) # recodes, not ideal method but lmSupport wasn't loading...

d$season <- fct_relevel(d$season, c('Spring', 'Summer', 'Fall', 'Winter')) #relevels
levels(d$season)
```

## Q2 
Recode the binary variables holiday and workingday to be factors with levels “no” (0) and
“yes” (1), with “no” as the baseline level.
```{r q2}
# recodes 0 to no and 1 to yes
d$hbin <- mapvalues(d$holiday, from = c('0', '1'), to = c('no', 'yes'))
# cbind(head(d$hbin), head(d$holiday)) # checks accuracy 
d$workbin <- mapvalues(d$workingday, from = c('0', '1'), to = c('no', 'yes')) 
# cbind(d$workbin, d$workinday) # checks accuracy 
```

## Q3
Recode the yr variable to be a factor with levels 2011 and 2012, with 2011 as the baseline
level.
```{r q3}
d$years <- mapvalues(d$yr, from = c('0', '1'), to = c('2011', '2012'))
# cbind(d$years, d$yr) # checks accuracy 
```

## Q4
Recode the weathersit variable as 1 - “clear”, 2 - “mist”, 3 - “light precipitation,” and 4 -
“heavy precipitation”, with “clear” as the baseline
```{r q1}
# code here
as.factor(d$weathersit)

# d <- d %>%
#  mutate(weathersit = case_when(
#    weathersit == "1"   ~ "clear",
#    weathersit == "2"   ~ "mist",
#    weathersit == '3'   ~ "light precipitation",
#    weathersit == "4"   ~ "heavy precipitation",
#    TRUE                ~ weathersit
#  ))
```

## Q5
Calculate raw temperature, feeling temperature, humidity, and windspeed as their values given
in the dataset multiplied by the maximum raw values stated in the codebook for each variable.
Instead of writing over the existing variables, create new ones with concise but
informative names.
```{r q1}
# multiplies normalized values by their stated maximum values to get raw values
d$raw_temp <- d$temp * 41
d$raw_ftemp <- d$atemp * 50
d$raw_hum <- d$hum * 100
d$raw_ws <- d$windspeed * 67
```

# Data Visualization 

## Q6

```{r data-viz}
# recreases image with raw feeling temp
ggplot(d, aes(x = dteday, y = cnt, color = raw_ftemp)) + 
  geom_point() +
  labs(title = "Bike rentals in DC, 2011 and 2012",
       subtitle = "Warmer temperatures associated with more bike rentals",
       x = "Date", y = "Bike rentals",
       color = "Temperature (C)",
       caption = "Source: Palmer Station LTER / palmerpenguins package") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
   scale_x_continuous(breaks = c(, 20), labels = c("2011-01", "2011-07", '2021-01', '2021-07', '2013-01'))
# find a way to get these specific dates
```

*Write narrative response here.*

# Modeling

## Q7
```{r q1}
# code here
```

## Q8
```{r q1}
# code here
```

## Q9
```{r q1}
# code here
```

# Using Linear Algebra to Do Regression

## Q10
```{r q1}
# code here
```

## Q11 refer to q9
```{r q1}
# code here
```

## Q12
```{r q1}
# code here
```
